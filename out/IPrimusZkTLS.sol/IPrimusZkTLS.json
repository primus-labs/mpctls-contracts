{"abi":[{"type":"function","name":"attestationEncode","inputs":[{"name":"attestation","type":"tuple","internalType":"struct Attestation","components":[{"name":"recipient","type":"address","internalType":"address"},{"name":"request","type":"tuple","internalType":"struct AttNetworkRequest","components":[{"name":"url","type":"string","internalType":"string"},{"name":"header","type":"string","internalType":"string"},{"name":"method","type":"string","internalType":"string"},{"name":"body","type":"string","internalType":"string"}]},{"name":"reponse","type":"tuple[]","internalType":"struct AttNetworkResponseResolve[]","components":[{"name":"keyName","type":"string","internalType":"string"},{"name":"parseType","type":"string","internalType":"string"},{"name":"parsePath","type":"string","internalType":"string"}]},{"name":"data","type":"string","internalType":"string"},{"name":"attParameters","type":"string","internalType":"string"},{"name":"timestamp","type":"uint64","internalType":"uint64"},{"name":"attestors","type":"tuple[]","internalType":"struct Attestor[]","components":[{"name":"attestorAddr","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]},{"name":"signature","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"attestationEncode1","inputs":[{"name":"attestation","type":"tuple","internalType":"struct Attestation","components":[{"name":"recipient","type":"address","internalType":"address"},{"name":"request","type":"tuple","internalType":"struct AttNetworkRequest","components":[{"name":"url","type":"string","internalType":"string"},{"name":"header","type":"string","internalType":"string"},{"name":"method","type":"string","internalType":"string"},{"name":"body","type":"string","internalType":"string"}]},{"name":"reponse","type":"tuple[]","internalType":"struct AttNetworkResponseResolve[]","components":[{"name":"keyName","type":"string","internalType":"string"},{"name":"parseType","type":"string","internalType":"string"},{"name":"parsePath","type":"string","internalType":"string"}]},{"name":"data","type":"string","internalType":"string"},{"name":"attParameters","type":"string","internalType":"string"},{"name":"timestamp","type":"uint64","internalType":"uint64"},{"name":"attestors","type":"tuple[]","internalType":"struct Attestor[]","components":[{"name":"attestorAddr","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]},{"name":"signature","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"encodeRequest","inputs":[{"name":"request","type":"tuple","internalType":"struct AttNetworkRequest","components":[{"name":"url","type":"string","internalType":"string"},{"name":"header","type":"string","internalType":"string"},{"name":"method","type":"string","internalType":"string"},{"name":"body","type":"string","internalType":"string"}]}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"encodeRequest1","inputs":[{"name":"request","type":"tuple","internalType":"struct AttNetworkRequest","components":[{"name":"url","type":"string","internalType":"string"},{"name":"header","type":"string","internalType":"string"},{"name":"method","type":"string","internalType":"string"},{"name":"body","type":"string","internalType":"string"}]}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"encodeResponse","inputs":[{"name":"reponse","type":"tuple[]","internalType":"struct AttNetworkResponseResolve[]","components":[{"name":"keyName","type":"string","internalType":"string"},{"name":"parseType","type":"string","internalType":"string"},{"name":"parsePath","type":"string","internalType":"string"}]}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"encodeResponse1","inputs":[{"name":"reponse","type":"tuple[]","internalType":"struct AttNetworkResponseResolve[]","components":[{"name":"keyName","type":"string","internalType":"string"},{"name":"parseType","type":"string","internalType":"string"},{"name":"parsePath","type":"string","internalType":"string"}]}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"verifyAttestation","inputs":[{"name":"attestation","type":"tuple","internalType":"struct Attestation","components":[{"name":"recipient","type":"address","internalType":"address"},{"name":"request","type":"tuple","internalType":"struct AttNetworkRequest","components":[{"name":"url","type":"string","internalType":"string"},{"name":"header","type":"string","internalType":"string"},{"name":"method","type":"string","internalType":"string"},{"name":"body","type":"string","internalType":"string"}]},{"name":"reponse","type":"tuple[]","internalType":"struct AttNetworkResponseResolve[]","components":[{"name":"keyName","type":"string","internalType":"string"},{"name":"parseType","type":"string","internalType":"string"},{"name":"parsePath","type":"string","internalType":"string"}]},{"name":"data","type":"string","internalType":"string"},{"name":"attParameters","type":"string","internalType":"string"},{"name":"timestamp","type":"uint64","internalType":"uint64"},{"name":"attestors","type":"tuple[]","internalType":"struct Attestor[]","components":[{"name":"attestorAddr","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]},{"name":"signature","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"attestationEncode((address,(string,string,string,string),(string,string,string)[],string,string,uint64,(string,string)[],bytes))":"525f3de6","attestationEncode1((address,(string,string,string,string),(string,string,string)[],string,string,uint64,(string,string)[],bytes))":"63bf3b9e","encodeRequest((string,string,string,string))":"ea831850","encodeRequest1((string,string,string,string))":"bfff3afe","encodeResponse((string,string,string)[])":"128dd696","encodeResponse1((string,string,string)[])":"0dc0a1a8","verifyAttestation((address,(string,string,string,string),(string,string,string)[],string,string,uint64,(string,string)[],bytes))":"3ec7ed50"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"header\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"body\",\"type\":\"string\"}],\"internalType\":\"struct AttNetworkRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"keyName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"parseType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"parsePath\",\"type\":\"string\"}],\"internalType\":\"struct AttNetworkResponseResolve[]\",\"name\":\"reponse\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"attParameters\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"attestorAddr\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct Attestor[]\",\"name\":\"attestors\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"attestationEncode\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"header\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"body\",\"type\":\"string\"}],\"internalType\":\"struct AttNetworkRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"keyName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"parseType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"parsePath\",\"type\":\"string\"}],\"internalType\":\"struct AttNetworkResponseResolve[]\",\"name\":\"reponse\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"attParameters\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"attestorAddr\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct Attestor[]\",\"name\":\"attestors\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"attestationEncode1\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"header\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"body\",\"type\":\"string\"}],\"internalType\":\"struct AttNetworkRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"encodeRequest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"header\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"body\",\"type\":\"string\"}],\"internalType\":\"struct AttNetworkRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"encodeRequest1\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"keyName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"parseType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"parsePath\",\"type\":\"string\"}],\"internalType\":\"struct AttNetworkResponseResolve[]\",\"name\":\"reponse\",\"type\":\"tuple[]\"}],\"name\":\"encodeResponse\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"keyName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"parseType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"parsePath\",\"type\":\"string\"}],\"internalType\":\"struct AttNetworkResponseResolve[]\",\"name\":\"reponse\",\"type\":\"tuple[]\"}],\"name\":\"encodeResponse1\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"header\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"body\",\"type\":\"string\"}],\"internalType\":\"struct AttNetworkRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"keyName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"parseType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"parsePath\",\"type\":\"string\"}],\"internalType\":\"struct AttNetworkResponseResolve[]\",\"name\":\"reponse\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"attParameters\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"attestorAddr\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct Attestor[]\",\"name\":\"attestors\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"verifyAttestation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of PrimusZkTLS, which defines functions for handling attestations and related operations.\",\"kind\":\"dev\",\"methods\":{\"attestationEncode((address,(string,string,string,string),(string,string,string)[],string,string,uint64,(string,string)[],bytes))\":{\"details\":\"Encodes an attestation into a bytes32 hash for verification or storage.\",\"params\":{\"attestation\":\"The attestation data to be encoded.\"},\"returns\":{\"_0\":\"The hash of the encoded attestation.\"}},\"encodeRequest((string,string,string,string))\":{\"details\":\"Encodes a network request into a bytes32 hash for verification or storage.\",\"params\":{\"request\":\"The network request data to be encoded.\"},\"returns\":{\"_0\":\"The hash of the encoded network request.\"}},\"encodeResponse((string,string,string)[])\":{\"details\":\"Encodes a list of response resolutions into a bytes32 hash for verification or storage.\",\"params\":{\"reponse\":\"The array of response resolution data to be encoded.\"},\"returns\":{\"_0\":\"The hash of the encoded response resolutions.\"}},\"verifyAttestation((address,(string,string,string,string),(string,string,string)[],string,string,uint64,(string,string)[],bytes))\":{\"details\":\"Verifies the validity of a given attestation.  This includes checking the signature of attestor,  the integrity of the data, and the attestation's consistency.\",\"params\":{\"attestation\":\"The attestation data to be verified.  It contains details about the recipient, request, response, and attestors. Requirements: - The attestation must have valid signatures from all listed attestors. - The data must match the provided request and response structure. - The attestation must not be expired (based on its timestamp). Emits no events.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/IPrimusZkTLS.sol\":\"IPrimusZkTLS\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"src/IPrimusZkTLS.sol\":{\"keccak256\":\"0x223064c0f030b0ca0c0bd27cc1e4144c4b694dccdede06a251cf2f662bc788e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bb106f22f5392cbde29fd2f976225fd289acfdb1a5fbef606431a429c55ac46\",\"dweb:/ipfs/QmdNkZfG6VNQDhQMCj1TBqL6LJPGk3DJQsTzKZviWGf2DS\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"struct Attestation","name":"attestation","type":"tuple","components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"struct AttNetworkRequest","name":"request","type":"tuple","components":[{"internalType":"string","name":"url","type":"string"},{"internalType":"string","name":"header","type":"string"},{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"body","type":"string"}]},{"internalType":"struct AttNetworkResponseResolve[]","name":"reponse","type":"tuple[]","components":[{"internalType":"string","name":"keyName","type":"string"},{"internalType":"string","name":"parseType","type":"string"},{"internalType":"string","name":"parsePath","type":"string"}]},{"internalType":"string","name":"data","type":"string"},{"internalType":"string","name":"attParameters","type":"string"},{"internalType":"uint64","name":"timestamp","type":"uint64"},{"internalType":"struct Attestor[]","name":"attestors","type":"tuple[]","components":[{"internalType":"string","name":"attestorAddr","type":"string"},{"internalType":"string","name":"url","type":"string"}]},{"internalType":"bytes","name":"signature","type":"bytes"}]}],"stateMutability":"pure","type":"function","name":"attestationEncode","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"struct Attestation","name":"attestation","type":"tuple","components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"struct AttNetworkRequest","name":"request","type":"tuple","components":[{"internalType":"string","name":"url","type":"string"},{"internalType":"string","name":"header","type":"string"},{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"body","type":"string"}]},{"internalType":"struct AttNetworkResponseResolve[]","name":"reponse","type":"tuple[]","components":[{"internalType":"string","name":"keyName","type":"string"},{"internalType":"string","name":"parseType","type":"string"},{"internalType":"string","name":"parsePath","type":"string"}]},{"internalType":"string","name":"data","type":"string"},{"internalType":"string","name":"attParameters","type":"string"},{"internalType":"uint64","name":"timestamp","type":"uint64"},{"internalType":"struct Attestor[]","name":"attestors","type":"tuple[]","components":[{"internalType":"string","name":"attestorAddr","type":"string"},{"internalType":"string","name":"url","type":"string"}]},{"internalType":"bytes","name":"signature","type":"bytes"}]}],"stateMutability":"pure","type":"function","name":"attestationEncode1","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"struct AttNetworkRequest","name":"request","type":"tuple","components":[{"internalType":"string","name":"url","type":"string"},{"internalType":"string","name":"header","type":"string"},{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"body","type":"string"}]}],"stateMutability":"pure","type":"function","name":"encodeRequest","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"struct AttNetworkRequest","name":"request","type":"tuple","components":[{"internalType":"string","name":"url","type":"string"},{"internalType":"string","name":"header","type":"string"},{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"body","type":"string"}]}],"stateMutability":"pure","type":"function","name":"encodeRequest1","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"struct AttNetworkResponseResolve[]","name":"reponse","type":"tuple[]","components":[{"internalType":"string","name":"keyName","type":"string"},{"internalType":"string","name":"parseType","type":"string"},{"internalType":"string","name":"parsePath","type":"string"}]}],"stateMutability":"pure","type":"function","name":"encodeResponse","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"struct AttNetworkResponseResolve[]","name":"reponse","type":"tuple[]","components":[{"internalType":"string","name":"keyName","type":"string"},{"internalType":"string","name":"parseType","type":"string"},{"internalType":"string","name":"parsePath","type":"string"}]}],"stateMutability":"pure","type":"function","name":"encodeResponse1","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"struct Attestation","name":"attestation","type":"tuple","components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"struct AttNetworkRequest","name":"request","type":"tuple","components":[{"internalType":"string","name":"url","type":"string"},{"internalType":"string","name":"header","type":"string"},{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"body","type":"string"}]},{"internalType":"struct AttNetworkResponseResolve[]","name":"reponse","type":"tuple[]","components":[{"internalType":"string","name":"keyName","type":"string"},{"internalType":"string","name":"parseType","type":"string"},{"internalType":"string","name":"parsePath","type":"string"}]},{"internalType":"string","name":"data","type":"string"},{"internalType":"string","name":"attParameters","type":"string"},{"internalType":"uint64","name":"timestamp","type":"uint64"},{"internalType":"struct Attestor[]","name":"attestors","type":"tuple[]","components":[{"internalType":"string","name":"attestorAddr","type":"string"},{"internalType":"string","name":"url","type":"string"}]},{"internalType":"bytes","name":"signature","type":"bytes"}]}],"stateMutability":"pure","type":"function","name":"verifyAttestation","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"attestationEncode((address,(string,string,string,string),(string,string,string)[],string,string,uint64,(string,string)[],bytes))":{"details":"Encodes an attestation into a bytes32 hash for verification or storage.","params":{"attestation":"The attestation data to be encoded."},"returns":{"_0":"The hash of the encoded attestation."}},"encodeRequest((string,string,string,string))":{"details":"Encodes a network request into a bytes32 hash for verification or storage.","params":{"request":"The network request data to be encoded."},"returns":{"_0":"The hash of the encoded network request."}},"encodeResponse((string,string,string)[])":{"details":"Encodes a list of response resolutions into a bytes32 hash for verification or storage.","params":{"reponse":"The array of response resolution data to be encoded."},"returns":{"_0":"The hash of the encoded response resolutions."}},"verifyAttestation((address,(string,string,string,string),(string,string,string)[],string,string,uint64,(string,string)[],bytes))":{"details":"Verifies the validity of a given attestation.  This includes checking the signature of attestor,  the integrity of the data, and the attestation's consistency.","params":{"attestation":"The attestation data to be verified.  It contains details about the recipient, request, response, and attestors. Requirements: - The attestation must have valid signatures from all listed attestors. - The data must match the provided request and response structure. - The attestation must not be expired (based on its timestamp). Emits no events."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/IPrimusZkTLS.sol":"IPrimusZkTLS"},"evmVersion":"cancun","libraries":{}},"sources":{"src/IPrimusZkTLS.sol":{"keccak256":"0x223064c0f030b0ca0c0bd27cc1e4144c4b694dccdede06a251cf2f662bc788e7","urls":["bzz-raw://3bb106f22f5392cbde29fd2f976225fd289acfdb1a5fbef606431a429c55ac46","dweb:/ipfs/QmdNkZfG6VNQDhQMCj1TBqL6LJPGk3DJQsTzKZviWGf2DS"],"license":"MIT"}},"version":1},"id":26}